#!/bin/bash

set -e


# check for previous install
if [ -d $OVPN_DIR/easy-rsa/keys ]; then
	echo $OVPN_DIR/easy-rsa/keys already exists.

	read -p "Are you sure you want to re-initialize the PKI configuration? [y/N] " yn
	if [ "$ys" != "y" ]; then
		exit
	fi
fi


# gather all the easy-rsa vars
if [ -z ${KEY_COUNTRY+x} ]; then
	KEY_COUNTRY=US
fi
if [ -z ${KEY_PROVINCE+x} ]; then
	KEY_PROVINCE=CA
fi
if [ -z ${KEY_CITY+x} ]; then
	KEY_CITY=SanDiego
fi
if [ -z ${KEY_ORG+x} ]; then
	KEY_ORG="Example Company"
fi
if [ -z ${KEY_EMAIL+x} ]; then
	KEY_EMAIL=info@example.com
fi
if [ -z ${KEY_OU+x} ]; then
	KEY_OU=MyOrgUnit
fi
if [ -z ${KEY_NAME+x} ]; then
	KEY_NAME=server
fi

rm -rf $OVPN_DIR/easy-rsa

# create the easy-rsa config dir from the samples in /usr/share
cp -r /usr/share/easy-rsa/ $OVPN_DIR
mkdir $OVPN_DIR/easy-rsa/keys

# configure the easy-rsa vars
sed -i "s/KEY_COUNTRY=\".*\"/KEY_COUNTRY=\"$KEY_COUNTRY\"/" $OVPN_DIR/easy-rsa/vars
sed -i "s/KEY_PROVINCE=\".*\"/KEY_PROVINCE=\"$KEY_PROVINCE\"/" $OVPN_DIR/easy-rsa/vars
sed -i "s/KEY_CITY=\".*\"/KEY_CITY=\"$KEY_CITY\"/" $OVPN_DIR/easy-rsa/vars
sed -i "s/KEY_ORG=\".*\"/KEY_ORG=\"$KEY_ORG\"/" $OVPN_DIR/easy-rsa/vars
sed -i "s/KEY_EMAIL=\".*\"/KEY_EMAIL=\"$KEY_EMAIL\"/" $OVPN_DIR/easy-rsa/vars
sed -i "s/KEY_OU=\".*\"/KEY_OU=\"$KEY_OU\"/" $OVPN_DIR/easy-rsa/vars
sed -i "s/KEY_NAME=\".*\"/KEY_NAME=\"$KEY_NAME\"/" $OVPN_DIR/easy-rsa/vars


# generate the Diffie-Hellman parameters
openssl dhparam -out $OVPN_DIR/dh2048.pem 2048


# initialize the PKI
cd $OVPN_DIR/easy-rsa
. ./vars
./clean-all
./build-ca


# generate a cert and key for the server
./build-key-server $KEY_NAME
cp $OVPN_DIR/easy-rsa/keys/$KEY_NAME.{crt,key} $OVPN_DIR
cp $OVPN_DIR/easy-rsa/keys/ca.crt $OVPN_DIR


# show a success mesage
echo CA built and server crt/key installed to $OVPN_DIR.
ls -l $OVPN_DIR


echo -e "Your OpenVPN server is ready to go! Now try generating a client cert:\n"
echo docker run --rm --volumes-from $OVPN_DATA -it $IMAGE openvpn_newclient
