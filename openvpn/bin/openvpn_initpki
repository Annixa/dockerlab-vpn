#!/bin/bash

set -e


pki=$OPENVPN/pki


# check for previous install
if [ -d $pki ] &&
   [ -d $pki/private ] &&
   [ -f $pki/private/server.key ] &&
   [ -f $pki/dh.pem ]
then
	echo It looks like your PKI configuration has been initialized already.
	read -p "Are you sure you want to re-initialize the PKI configuration? [y/N] " yn
	if [ "$yn" != "y" ]; then
		echo Exiting upon user request
		exit
	fi
fi


# remove any previous install
rm -rf $pki/*


# gather all the easy-rsa vars
if [ -z ${KEY_COUNTRY+x} ]; then
	KEY_COUNTRY=US
fi
if [ -z ${KEY_PROVINCE+x} ]; then
	KEY_PROVINCE=CA
fi
if [ -z ${KEY_CITY+x} ]; then
	KEY_CITY=SanDiego
fi
if [ -z ${KEY_ORG+x} ]; then
	KEY_ORG="Example Company"
fi
if [ -z ${KEY_EMAIL+x} ]; then
	KEY_EMAIL=info@example.com
fi
if [ -z ${KEY_OU+x} ]; then
	KEY_OU=MyOrgUnit
fi
if [ -z ${KEY_NAME+x} ]; then
	KEY_NAME=server
fi


# configure the easy-rsa vars
sed -i "s/KEY_COUNTRY=\".*\"/KEY_COUNTRY=\"$KEY_COUNTRY\"/" $EASYRSA/vars
sed -i "s/KEY_PROVINCE=\".*\"/KEY_PROVINCE=\"$KEY_PROVINCE\"/" $EASYRSA/vars
sed -i "s/KEY_CITY=\".*\"/KEY_CITY=\"$KEY_CITY\"/" $EASYRSA/vars
sed -i "s/KEY_ORG=\".*\"/KEY_ORG=\"$KEY_ORG\"/" $EASYRSA/vars
sed -i "s/KEY_EMAIL=\".*\"/KEY_EMAIL=\"$KEY_EMAIL\"/" $EASYRSA/vars
sed -i "s/KEY_OU=\".*\"/KEY_OU=\"$KEY_OU\"/" $EASYRSA/vars
sed -i "s/KEY_NAME=\".*\"/KEY_NAME=\"$KEY_NAME\"/" $EASYRSA/vars


# generate the Diffie-Hellman parameters
if [ ! -f $pki/dh.pem ]; then
	openssl dhparam -out $pki/dh.pem 2048
else
	echo No need to create new DH params.
fi


# initialize the CA
cd $EASYRSA
. ./vars
./clean-all
./build-ca

echo
ls -lR $EASYRSA
echo

# generate a cert/key for the server
./build-key-server $KEY_NAME
# move the certs and keys into their proper pki location
mkdir -p $pki/{certs,private}
cp $EASYRSA/keys/ca.crt $pki/certs
cp $EASYRSA/keys/ca.key $pki/private
cp $EASYRSA/keys/$KEY_NAME.crt $pki/certs/server.crt
cp $EASYRSA/keys/$KEY_NAME.key $pki/private/server.key
# show a success message
echo CA built and server crt/key installed to $pki.


# create the ta.key
openvpn --genkey --secret $pki/ta.key
echo ta.key generated


echo -e "\n\nYour OpenVPN server is configured and ready to go! Now try generating a client cert using:\n"
echo -e "sudo docker run --rm --volumes-from <this container> -it <this image> openvpn_newclient\n"

